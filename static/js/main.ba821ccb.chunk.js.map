{"version":3,"sources":["candy-machine.ts","assets/MdiTwitter.svg","assets/MdiYoutube.svg","components/NavBar.tsx","components/About.tsx","components/Examples.tsx","components/MiddlePart.tsx","components/Roadmap.tsx","components/FillerImages.tsx","components/FAQ.tsx","components/Creator.tsx","components/Signup.tsx","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","NavBar","useState","show","setShow","isTabletOrMobile","useMediaQuery","query","isDesktopOrLaptop","handleShow","preventDefault","stopPropagation","Navbar","bg","expand","fixed","Container","fluid","Brand","href","Toggle","aria-controls","onClick","Collapse","Offcanvas","onHide","Header","closeButton","Body","Nav","className","Link","src","youtubeLogo","alt","twitterLogo","About","Examples","Row","Col","xs","sm","md","lg","xl","xxl","MiddlePart","Button","variant","Roadmap","FillerImages","FAQ","Creator","Signup","style","padding","type","placeholder","ConnectButton","styled","WalletDialogButton","CounterText","MintContainer","div","MintButton","renderCounter","days","hours","minutes","seconds","completed","Home","props","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","setItemsAvailable","setItemsRedeemed","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","refreshCandyMachineState","onMint","mintTxId","txTimeout","msg","code","indexOf","getBalance","LAMPORTS_PER_SOL","useEffect","toBase58","toLocaleString","disabled","CircularProgress","date","onMount","onComplete","renderer","Snackbar","autoHideDuration","onClose","Alert","process","network","Connection","startDateSeed","parseInt","theme","createTheme","palette","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","startIcon","marginRight","endIcon","marginLeft","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba821ccb.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","export default __webpack_public_path__ + \"static/media/MdiTwitter.daa9e490.svg\";","export default __webpack_public_path__ + \"static/media/MdiYoutube.b2ee9a63.svg\";","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\nimport Offcanvas from \"react-bootstrap/Offcanvas\";\nimport \"../styles/navbar.css\";\n//import react responsive\nimport { useMediaQuery } from \"react-responsive\";\n//import logos\nimport twitterLogo from \"../assets/MdiTwitter.svg\";\nimport youtubeLogo from \"../assets/MdiYoutube.svg\";\n\nconst NavBar = () => {\n  //Off canbas config\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n  //react responsive config\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1000px)\",\n  });\n  //enable offcanvas scrolling\n  const handleShow = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setShow(true);\n  };\n  return (\n    <div>\n      {isTabletOrMobile && (\n        <Navbar id=\"navbarDiv\" bg=\"light\" expand=\"lg\" fixed=\"top\">\n          <Container fluid>\n            <Navbar.Brand href=\"#landingPage\" id=\"navbarTitle\">\n              llamadramaclub\n            </Navbar.Brand>\n            <Navbar.Toggle\n              aria-controls=\"basic-navbar-nav\"\n              onClick={handleShow}\n              id=\"navbarToggle\"\n            />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Offcanvas id=\"canvas\" show={show} onHide={handleClose}>\n                <Offcanvas.Header closeButton>\n                  {/* <Offcanvas.Title>Offcanvas</Offcanvas.Title> */}\n                </Offcanvas.Header>\n                <Offcanvas.Body>\n                  <Nav className=\"me-auto\">\n                    <Nav.Link href=\"#roadmapComponent\">\n                      <p className=\"canvasLink\">ROADMAP</p>\n                    </Nav.Link>\n                    <Nav.Link href=\"#creatorPartDiv\">\n                      {\" \"}\n                      <p className=\"canvasLink\">CREATOR</p>\n                    </Nav.Link>\n                    <Nav.Link href=\"#aboutPage\">\n                      {\" \"}\n                      <p className=\"canvasLink\">ABOUT</p>\n                    </Nav.Link>\n                    {/* <Nav.Link href=\"#link\">FUZZIES LOGO</Nav.Link> */}\n                    <Nav.Link href=\"#link\">\n                      {\" \"}\n                      <img src={youtubeLogo} alt=\"\" />\n                    </Nav.Link>\n                    <Nav.Link href=\"#link\">\n                      <img src={twitterLogo} alt=\"\" />\n                    </Nav.Link>\n                    {/* <Button variant=\"warning\">Warning</Button>{\" \"} */}\n                  </Nav>\n                </Offcanvas.Body>\n              </Offcanvas>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n      )}\n\n      {isDesktopOrLaptop && (\n        <Navbar id=\"navbarDiv\" bg=\"light\" expand=\"lg\" fixed=\"top\">\n          <Container id=\"navbarContainer\" fluid>\n            <Navbar.Brand href=\"#landingPage\">\n              {\" \"}\n              <p className=\"navLink \" id=\"navbarTitle\">\n                llamadramaclub\n              </p>\n            </Navbar.Brand>\n            <Navbar.Toggle\n              aria-controls=\"basic-navbar-nav\"\n              onClick={handleShow}\n            />\n            <Nav className=\"ms-auto\">\n              <Nav.Link href=\"#roadmapComponent\">\n                <p className=\"navLink\">ROADMAP</p>\n              </Nav.Link>\n              <Nav.Link href=\"#creatorPartDiv\">\n                {\" \"}\n                <p className=\"navLink\">Creator</p>\n              </Nav.Link>\n              <Nav.Link href=\"#aboutPage\">\n                {\" \"}\n                <p className=\"navLink\">About</p>\n              </Nav.Link>\n              <Nav.Link href=\"#link\">\n                {\" \"}\n                {/* <p className=\"navLink\">Logo</p> */}\n              </Nav.Link>\n              <Nav.Link href=\"#link\">\n                {\" \"}\n                <p className=\"navLink\">\n                  {\" \"}\n                  <img src={youtubeLogo} alt=\"\" />\n                </p>\n              </Nav.Link>\n              <Nav.Link href=\"#link\">\n                {\" \"}\n                <p className=\"navLink\">\n                  {\" \"}\n                  <img src={twitterLogo} alt=\"\" />\n                </p>\n              </Nav.Link>\n            </Nav>\n          </Container>\n        </Navbar>\n      )}\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport \"../styles/about.css\";\n\nconst About = () => {\n  return (\n    <div id=\"aboutPage\">\n      <h1 id=\"aboutTitle\">llamadramaclub</h1>\n      <p className=\"aboutText\">\n        was created by a group of creatives with a passion for music,\n      </p>\n      <p className=\"aboutText\">theater</p>\n      <p className=\"aboutText\">\n        and animation. It is our goal to spearhead projects of various genres\n        and collab with our favorite artist who dabbling in art, short film\n        animation and gaming.\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"../styles/examples.css\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { Divider } from \"@material-ui/core\";\n\nconst Examples = () => {\n  const isDesktopOrLaptop = useMediaQuery({\n    query: \"(min-width: 1224px)\",\n  });\n  const isTabletOrMobile = useMediaQuery({ query: \"(max-width: 1224px)\" });\n  return (\n    <div id=\"examplesDiv\">\n      {/* 2 rows 3 images */}\n      {isDesktopOrLaptop && (\n        <div>\n          {\" \"}\n          <Row>\n            <Col xs={4} sm={4} md={4} lg={4} xl={4} xxl={4}>\n              <div className=\"ExampleImageContainer\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>\n            <Col xs={4} sm={4} md={4} lg={4} xl={4} xxl={4}>\n              <div className=\"ExampleImageContainer\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>{\" \"}\n            <Col xs={4} sm={4} md={4} lg={4} xl={4} xxl={4}>\n              <div className=\"ExampleImageContainer\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>{\" \"}\n          </Row>\n          <Row>\n            <Col xs={4} sm={4} md={4} lg={4} xl={4} xxl={4}>\n              <div className=\"ExampleImageContainer\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>\n            <Col xs={4} sm={4} md={4} lg={4} xl={4} xxl={4}>\n              <div className=\"ExampleImageContainer\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>{\" \"}\n            <Col xs={4} sm={4} md={4} lg={4} xl={4} xxl={4}>\n              <div className=\"ExampleImageContainer\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>{\" \"}\n          </Row>{\" \"}\n        </div>\n      )}\n      {/* 3 rows 2 images */}\n      {isTabletOrMobile && (\n        <div>\n          {\" \"}\n          <Row>\n            <Col xs={6} sm={6} md={6} lg={6} xl={6} xxl={6}>\n              <div className=\"ExampleImageContainerMobile\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>\n            <Col xs={6} sm={6} md={6} lg={6} xl={6} xxl={6}>\n              <div className=\"ExampleImageContainerMobile\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>{\" \"}\n          </Row>\n          <Row>\n            <Col xs={6} sm={6} md={6} lg={6} xl={6} xxl={6}>\n              <div className=\"ExampleImageContainerMobile\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>{\" \"}\n            <Col xs={6} sm={6} md={6} lg={6} xl={6} xxl={6}>\n              <div className=\"ExampleImageContainerMobile\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>\n          </Row>{\" \"}\n          <Row>\n            <Col xs={6} sm={6} md={6} lg={6} xl={6} xxl={6}>\n              <div className=\"ExampleImageContainerMobile\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>{\" \"}\n            <Col xs={6} sm={6} md={6} lg={6} xl={6} xxl={6}>\n              <div className=\"ExampleImageContainerMobile\">\n                <div className=\"ExampleImage\"></div>\n              </div>\n            </Col>\n          </Row>{\" \"}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Examples;\n\n<div className=\"ExampleImageContainer\">\n  <div className=\"ExampleImage\">Image</div>\n</div>;\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"../styles/middlePart.css\";\n\nconst MiddlePart = () => {\n  return (\n    <div id=\"middlePartDiv\">\n      <Row>\n        <Col xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\n          <div className=\"middleImgContainer\">\n            <div className=\"middleImage\"></div>\n          </div>\n        </Col>\n        <Col xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\n          <div id=\"middleText\">\n            <h1>Middle part </h1>\n            <h1>\n              There's not enough text for this part. Do you want to keep or\n              remove it?\n            </h1>\n            <p>\n              Lorem ipsum, dolor sit amet consectetur adipisicing elit. Id,\n              similique aut? Numquam sed voluptates in! Quisquam porro culpa\n              eaque, commodi architecto voluptate, beatae laboriosam earum\n              impedit odit dolorem adipisci facere.\n            </p>\n            <Button id=\"followUsBtn\" variant=\"dark\">\n              Follow us on Twitter\n            </Button>{\" \"}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default MiddlePart;\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"../styles/roadmap.css\";\n\nconst Roadmap = () => {\n  return (\n    <div id=\"roadmapComponent\">\n      <h1>RoadMap</h1>\n      <div>\n        <Container>\n          <Row>\n            <Col xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\n              <div className=\"roadmapTextContainer\">\n                <h2 className=\"roadmapTitle\">Resale</h2>\n                <p className=\"roadmapText\">\n                  Collectors will be able to grab llamas at a special discounted\n                  price with no mint limit.\n                </p>\n                <p className=\"roadmapText\">5,000 llamas will be released.</p>\n              </div>\n            </Col>{\" \"}\n            <Col xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\n              <div className=\"roadmapTextContainer\">\n                <h2 className=\"roadmapTitle\">Launch day</h2>\n                <p className=\"roadmapText\">\n                  If you missed out on the presale, don’t worry!\n                </p>\n                <p className=\"roadmapText\">\n                  5,000 more llamas will be released on launch day.\n                </p>\n              </div>\n            </Col>{\" \"}\n            <Col xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\n              <div className=\"roadmapTextContainer\">\n                <h2 className=\"roadmapTitle\">Videogame drop</h2>\n                <p className=\"roadmapText\">\n                  At 75%, we plan on launching development of our game world. We\n                  cannot express enough how diverse our game launches will be.\n                  Our goal is to create something for everyone to enjoy every\n                  quarter. NFT holders will instantly gain freebies in games\n                  once launched.\n                </p>\n              </div>\n            </Col>{\" \"}\n          </Row>\n          <Row>\n            <Col xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\n              <div className=\"roadmapTextContainer\">\n                <h2 className=\"roadmapTitle\"> Tesla Giveaway</h2>\n                <div className=\"roadmapText\">\n                  <p>\n                    {\" \"}\n                    That’s right! At 100% We will be giving away a Tesla! -\n                    Follow Twitter, FB, Insta\n                  </p>\n                  <h3>Follow us on:</h3>\n                  <Button variant=\"warning\">Twitter</Button>{\" \"}\n                  <Button variant=\"warning\">Facebook</Button>{\" \"}\n                  <Button variant=\"warning\">Instagram</Button>{\" \"}\n                </div>\n              </div>\n            </Col>{\" \"}\n            <Col xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\n              <div className=\"roadmapTextContainer\">\n                <h2 className=\"roadmapTitle\">Animated short films</h2>\n                <p className=\"roadmapText\">\n                  We aren’t called the drama club for nothing. - Llamadramaclub\n                  - plans on entertaining you with animated shorts that will\n                  make you laugh, - and hopefully leave you wanting more. NFT\n                  holders will gain early access to each episode before -\n                  general public\n                </p>\n                <p className=\"roadmapText\">\n                  Llamadramaclub plans on entertaining you with animated shorts\n                  that will make you laugh, and hopefully leave you wanting\n                  more. NFT holders will gain early access to each episode\n                  before general public\n                </p>\n              </div>\n            </Col>\n          </Row>{\" \"}\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Roadmap;\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"../styles/fillerImages.css\";\nconst FillerImages = () => {\n  return (\n    <div id=\"fillerDiv\">\n      <Row>\n        <Col xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\n          <div className=\"fillerImageContainer\">\n            <div className=\"fillerImage\"></div>\n          </div>\n        </Col>\n        <Col xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\n          <div className=\"fillerImageContainer\">\n            <div className=\"fillerImage\"></div>\n          </div>\n        </Col>{\" \"}\n        <Col xs={12} sm={12} md={4} lg={4} xl={4} xxl={4}>\n          <div className=\"fillerImageContainer\">\n            <div className=\"fillerImage\"></div>\n          </div>\n        </Col>{\" \"}\n      </Row>\n    </div>\n  );\n};\n\nexport default FillerImages;\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"../styles/faq.css\";\n\nconst FAQ = () => {\n  return (\n    <div id=\"faqComponent\">\n      <h1>FAQ</h1>\n      <Container>\n        <Row>\n          <Col xs={12} sm={12} md={3} lg={3} xl={3} xxl={3}>\n            <div className=\"faqTextContainer\">\n              <h2 className=\"faqTitle\">How do I get an NFT?</h2>\n              <p className=\"faqText\">\n                Stay updated on all social media accounts. Presale and live mint\n                details will be announced with direct link to the action.\n              </p>\n            </div>\n          </Col>{\" \"}\n          <Col xs={12} sm={12} md={3} lg={3} xl={3} xxl={3}>\n            <div className=\"faqTextContainer\">\n              <h2 className=\"faqTitle\">When will the llamas be available?</h2>\n              <p className=\"faqText\">January 2022</p>\n            </div>\n          </Col>{\" \"}\n          <Col xs={12} sm={12} md={3} lg={3} xl={3} xxl={3}>\n            <div className=\"faqTextContainer\">\n              <h2 className=\"faqTitle\">How many NFTs can I buy?</h2>\n              <p className=\"faqText\">\n                There is no limit. We believe that our mission will attract the\n                kind of investors that want to double down on us. Our goal is to\n                show investors they made the right choice.\n              </p>\n            </div>\n          </Col>{\" \"}\n          <Col xs={12} sm={12} md={3} lg={3} xl={3} xxl={3}>\n            <div className=\"faqTextContainer\">\n              <h2 className=\"faqTitle\">Why Sol?</h2>\n              <p className=\"faqText\">\n                Simple… Value. LDC is a project that will kick butt in the video\n                game, art, and animation realms. The fractional gas fees allow\n                us to give you more value for your investment.\n              </p>\n            </div>\n          </Col>{\" \"}\n        </Row>{\" \"}\n      </Container>\n    </div>\n  );\n};\n\nexport default FAQ;\n","import React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"../styles/creator.css\";\nconst Creator = () => {\n  return (\n    <div id=\"creatorPartDiv\">\n      <Container>\n        {\" \"}\n        <Row>\n          <Col xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\n            <div className=\"creatorImgContainer\">\n              <div className=\"creatorImage\"></div>\n            </div>\n          </Col>\n          <Col xs={12} sm={12} md={6} lg={6} xl={6} xxl={6}>\n            <div id=\"creatorText\">\n              <h1>Creator</h1>\n              <h1>\n                There's not enough text for this part. Do you want to keep or\n                remove it?\n              </h1>\n              <p>\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Id,\n                similique aut? Numquam sed voluptates in! Quisquam porro culpa\n                eaque, commodi architecto voluptate, beatae laboriosam earum\n                impedit odit dolorem adipisci facere.\n              </p>\n              <Button id=\"creatorBtn\" variant=\"dark\">\n                Follow\n              </Button>{\" \"}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Creator;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"../styles/signup.css\";\n\nconst Signup = () => {\n  return (\n    <div id=\"signUpDiv\">\n      <h1>Stay in touch</h1>\n      <h2>\n        Be the first to know about the exciting things to come for our Fuzzie\n        Family.\n      </h2>\n\n      <div id=\"signupForm\">\n        <input\n          style={{ padding: \"10px\" }}\n          className=\"signupItem\"\n          type=\"text\"\n          placeholder=\"email address\"\n        />\n        <Button id=\"signupBtn\" className=\"signupItem\" variant=\"warning\">\n          Send\n        </Button>{\" \"}\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n//my imports\nimport \"./styles/landing.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n      refreshCandyMachineState();\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n  return (\n    <main>\n      <div id=\"landingPage\">\n        <Container fluid id=\"landingContainer\">\n          <Row>\n            <Col xs={12} sm={12} md={12} lg={6} xl={6} xxl={6}>\n              <div id=\"landingImageContainer\">\n                <div id=\"landingImage\"> </div>\n              </div>\n            </Col>\n            <Col xs={12} sm={12} md={12} lg={6} xl={6} xxl={6}>\n              <div id=\"landingWelcomeGroup\">\n                {/* Minting Section (Where the MINT button is):  */}\n                <h2>Thousands of loveable llamas from the </h2>\n                <h1>llamadramaclub</h1>\n                <h2>are joining the NFT world January 2022.</h2>\n                {/* minting starts here */}\n                <div className=\"mint-container\">\n                  {wallet && (\n                    <p>\n                      Wallet {shortenAddress(wallet.publicKey.toBase58() || \"\")}\n                    </p>\n                  )}\n\n                  {wallet && (\n                    <p>Balance: {(balance || 0).toLocaleString()} SOL</p>\n                  )}\n\n                  {wallet && <p>Total Available: {itemsAvailable}</p>}\n\n                  {wallet && <p>Redeemed: {itemsRedeemed}</p>}\n\n                  {wallet && <p>Remaining: {itemsRemaining}</p>}\n\n                  <MintContainer>\n                    {!wallet ? (\n                      <ConnectButton>Connect Wallet</ConnectButton>\n                    ) : (\n                      <MintButton\n                        disabled={isSoldOut || isMinting || !isActive}\n                        onClick={onMint}\n                        variant=\"contained\"\n                      >\n                        {isSoldOut ? (\n                          \"SOLD OUT\"\n                        ) : isActive ? (\n                          isMinting ? (\n                            <CircularProgress />\n                          ) : (\n                            \"MINT\"\n                          )\n                        ) : (\n                          <Countdown\n                            date={startDate}\n                            onMount={({ completed }) =>\n                              completed && setIsActive(true)\n                            }\n                            onComplete={() => setIsActive(true)}\n                            renderer={renderCounter}\n                          />\n                        )}\n                      </MintButton>\n                    )}\n                  </MintContainer>\n\n                  <Snackbar\n                    open={alertState.open}\n                    autoHideDuration={6000}\n                    onClose={() =>\n                      setAlertState({ ...alertState, open: false })\n                    }\n                  >\n                    <Alert\n                      onClose={() =>\n                        setAlertState({ ...alertState, open: false })\n                      }\n                      severity={alertState.severity}\n                    >\n                      {alertState.message}\n                    </Alert>\n                  </Snackbar>\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div id=\"LandingFollows\">\n                <div id=\"followButtons\">\n                  <span className=\"followButton\">\n                    <button id=\"twitterBtn\">Twitter</button>\n                  </span>\n                  <span className=\"followButton\">\n                    <button id=\"discordBtn\">Twitter</button>\n                  </span>\n                  {/* <span className=\"followButton\">\n                  <Button variant=\"warning\">Instagram</Button>{\" \"}\n                </span> */}\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;\n","import \"./MintApp.css\";\nimport { useMemo } from \"react\";\n//my imports\nimport Button from \"react-bootstrap/Button\";\nimport Landing from \"./components/Landing\";\nimport NavBar from \"./components/NavBar\";\nimport About from \"./components/About\";\nimport Examples from \"./components/Examples\";\nimport MiddlePart from \"./components/MiddlePart\";\nimport Roadmap from \"./components/Roadmap\";\nimport FillerImages from \"./components/FillerImages\";\nimport FAQ from \"./components/FAQ\";\nimport Creator from \"./components/Creator\";\nimport Signup from \"./components/Signup\";\nimport \"./styles/app.css\";\n\nimport Home from \"./Home\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n  palette: {\n    type: \"dark\",\n  },\n  overrides: {\n    MuiButtonBase: {\n      root: {\n        justifyContent: \"flex-start\",\n      },\n    },\n    MuiButton: {\n      root: {\n        textTransform: undefined,\n        padding: \"12px 16px\",\n      },\n      startIcon: {\n        marginRight: 8,\n      },\n      endIcon: {\n        marginLeft: 8,\n      },\n    },\n  },\n});\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSlopeWallet(),\n      getSolflareWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network }),\n    ],\n    []\n  );\n\n  return (\n    <div id=\"HomePage\">\n      <NavBar />\n\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect={true}>\n            <WalletDialogProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                config={config}\n                connection={connection}\n                startDate={startDateSeed}\n                treasury={treasury}\n                txTimeout={txTimeout}\n              />\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n\n      <About />\n      <Examples />\n      <MiddlePart />\n      <Examples />\n      <Roadmap />\n      <FillerImages />\n      <FAQ />\n      <Creator />\n      <Signup />\n      <FillerImages />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n//add bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}